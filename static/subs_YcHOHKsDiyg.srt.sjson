{"start":[0,1690,3610,9290,12380,16394,21700,25520,27600,30130,31850,33070,35070,37800,40360,43420,44880,48350,51760,54240,55900,59660,60330,62460,67670,71270,74860,79630,82420,85460,88630,92640,95010,98210,102260,106960,111160,114000,117920,118900,122910,124850,128430,131290,136300,139870,145250,149460,153260,156690,160290,165270,169320,172800,178160,183070,187740,191240,192790,196750,200940,204650,206110,208340,211750,213030,217110,219820,222720,224430,227270,230160,233670,236600,237750,241740,245870,247900,251380,253570,254280,257430,260740,264400,267360,270990,273740,274810,278530,281840,285290,287820,288910,292290,295590,299220,301390,304560,306100,308490,310550,311550,314260,318440,320430,322570,324990,328200,330740,332240,333200,334210,337110,340780,342710,344920,347200,350400,352860,354640,358700,360470,361870,363280,366370,367640,371145,372470,377840,383760,386710,390460,393110,396550,399980,402280,405690,408470,411750,413210,415960,419760,421780,426840,427910,431120,433700,435750,438620,439670,442670,444500,446790,448370,449800,451040,451780,454180,455230,457560,458900,461690,462380,465270,467820,468990,471650,475710,478560,481600,483020,486760,489700,490710,493270,495850,500000,502470,503720],"end":[1690,3610,9290,12380,16394,21700,25520,27600,30130,31850,33070,35070,37800,40360,43420,44880,48350,51760,54240,55900,59660,60330,62460,67670,71270,74860,79630,82420,85460,88630,92640,95010,98210,102260,106960,111160,114000,117920,118900,122910,124850,128430,131290,136300,139870,145250,149460,153260,156690,160290,165270,169320,172800,178160,183070,187740,191240,192790,196750,200940,204650,206110,208340,211750,213030,217110,219820,222720,224430,227270,230160,233670,236600,237750,241740,245870,247900,251380,253570,254280,257430,260740,264400,267360,270990,273740,274810,278530,281840,285290,287820,288910,292290,295590,299220,301390,304560,306100,308490,310550,311550,314260,318440,320430,322570,324990,328200,330740,332240,333200,334210,337110,340780,342710,344920,347200,350400,352860,354640,358700,360470,361870,363280,366370,367640,371145,372470,377840,383760,386710,390460,393110,396550,399980,402280,405690,408470,411750,413210,415960,419760,421780,426840,427910,431120,433700,435750,438620,439670,442670,444500,446790,448370,449800,451040,451780,454180,455230,457560,458900,461690,462380,465270,467820,468990,471650,475710,478560,481600,483020,486760,489700,490710,493270,495850,500000,502470,503720,504420],"text":["","PROFESSOR: Because this is going to be an important concept we're going to","build on today, let's remind ourselves what arc consistency is all about.","So we know how to enforce the consistency of a single arc.","With arc consistency, what we'd like to do is we'd like to look at all of","the unassigned variables and make all of the arcs consistent at once.","And in doing this, we'll be deleting values here and there from domains in","a way that will detect failure.","So first, let's remember what it means to enforce the","consistency of a single arc.","Well, here's a single arc.","What does it mean to enforce its consistency?","What it means is it means we have to look at the tail of the arc--","remember, we always delete from the tail.","Remember the constraint satisfaction police pull this arc over, and they're","going to look and see what's in the trunk.","So you look at everything in the tail, and you ask the question, are any of","these values in the tail guaranteed to trigger a constraint","violation on this arc?","And so we say, well, what about red?","Well, if I chose red at V, then at NSW I could choose blue.","What about green?","Well if I chose green, I could choose either, and so on.","So this arc is, in fact, consistent, because for any value at V, there's a","possibility of avoiding a constraint violation left.","If we look at this arc, then we can go through the same reasoning process.","At SA, if we choose blue, we'll be fine, so the value blue gets to say.","If we flip this arc around, even though the constraint is not","directional, the arcs that we make consistent are.","And in this direction, the story is a little different.","So at NSW, if we choose red, we can avoid a constraint violation, for","example, by picking blue, our only choice.","If we choose blue, then we're guaranteed a constraint violation.","So the way we enforce arc consistency for a single arc is, in this case, we","would delete blue from the domain of NSW.","If we then look here, this arc used to be consistent, but it can stop being","consistent if values are removed from the head.","For example, the reason why it was safe to have red at V is because blue","was available.","Blue is not available, and so now if we choose red at V, then we'll have a","constraint violation guaranteed.","And so we can fix that-- we can make this arc consistent","now by deleting red.","Now, the big idea with enforcing arc consistency of the entire graph was if","you look at this particular graph here, you'll see that because WA is","red and Q is green, NT and SA both have to be blue, right?","And when we check the consistency of the arc between SA and NT in either","direction, we'll look at it and we'll say, all right, well, if I choose blue","at SA, then I'm guaranteed a constraint violation.","The way I fix that is by deleting from the tail-- so I delete this--","but now I see that there are, in fact, no legal values left at SA.","And so I know that this configuration here, even though I've only assigned","two variables, arc consistency guarantees me that there is no","solution left, and so I can just stop the backtracking search.","OK, so as soon as a domain goes empty in filtering, we know that this branch","of the tree is doomed, and we can back up in the search.","Arc consistency detects failure earlier than forward checking does,","but, of course, it's more work.","You have to enforce the consistency of possibly a lot of arcs.","The important thing here you need to remember is if a variable X loses a","value, all incoming arcs need to be rechecked, and that means you might","have to check arcs multiple times.","This will be important.","In addition, there's still a backtracking search going on, so you","don't run this thing once.","You run it after every assignment at every step in the backtracking search.","So you run arc consistency enforcement many times.","","OK, well, that's all great.","Arc consistency is much more powerful than forward checking at a","computational cost, but what does it do for you?","It doesn't remove the need for the backtracking search, OK?","After you enforce arc consistency, you can be in a couple different","configurations.","It's possible you'll have one solution left, and you'll just be able to see","that every domain has one value, and you won't have to backtrack again.","That's great.","It also could be the case that you have multiple solutions left.","It could also be the case that you have no solutions left","and don't know it.","So, for example, if you look over on the right and you look at these two","graphs, this one's got two solutions left.","Arc consistency isn't going to pick amongst them in any way.","Here, this graph is arc consistent, but there are no solutions left,","because in order to see the problem, you have to look at three","variables at a time.","So what went wrong?","The reason why arc consistency in this bottom case wasn't sufficient to","discover the inevitable failures is because it only looks at pairs.","So you might think, maybe we need a stronger notion than arc consistency.","Maybe we need to look beyond pairs.","And there is such a notion.","There's a generalized notion called K-consistency, where instead of","getting pulled over by this little arc consistency guy, you get pulled over","by this RoboCop thing.","So what does this K-consistency look like?","Well, it's basically like arc consistency, but we can","generalize that idea.","So we can have increasing degrees of consistency.","So for example, what about 1-consistency?","We didn't even talk about this.","1-consistency is sometimes called node consistency.","That's the property that every node's domain has a value which meets the","node's unary constraints.","That's not really useful, because when you actually solve these things,","pretty much the first thing you do is enforce your unary constraints.","A unary constraint really is the same as a restricted domain.","Unary constraints aren't terribly interesting in that sense.","What about 2-consistency?","Well, we have a name for that.","That's arc consistency.","But let me state it in a way that will generalize.","Arc consistency says for every pair of nodes, right-- so","two nodes at a time--","any consistent assignment to one--","OK, so you pick a value for the tail--","can be extended to the other, meaning there's some value at the head","available that doesn't violate the constraint.","And that's this diagram right here.","Whatever I do at the tail, there is some choice at the head that avoids","the constraint.","What about K-consistency?","We can generalize that statement.","We can say arc consistency is about a pair of nodes, K-consistency must be","about k nodes.","And what it says is if I pick up k nodes-- and in this diagram here there","are four nodes--","and I take k minus one of them and find a consistent assignment, then for","any consistent assignment to k minus 1, I have a choice at the kth node","here that will not violate a constraint.","Essentially, K-consistency says that whatever you do at the tail-- and","here, the tail's all but one of the nodes--","you'll be able to safely extend it.","Now, enforcing K-consistency, making sure that your domains are such that","this property holds, that's tricky.","And just like arc consistency takes a fair amount of computation, the higher","the k gets, the more computation you have to do.","For this class, I will assume that you have mastery of the case for k equals","2-- that's arc consistency--","but the general idea is important.","There's an even stronger notion of k consistency, and in some sense, this","is really a mathematical distinction.","K-consistency says if you can assign k minus 1, you can assign k.","For example, arc consistency--","if you can assign one, then you can assign a second.","Strong K-consistency means all the lower orders of","K-consistency are also satisfied.","So strong consistency is kind of a mythical thing.","If you had it, be great.","If you had strong inconsistency, you'd never have to backtrack.","You'd be living in a wonderful place.","And the reason for this is you could choose any assignment","to some first variable.","And then you pick another variable.","And because of 2-consistency--","arc consistency--","we know that whatever you do with that one variable, you can assign","it to the next one.","You've deleted domains in such a way that that's going to work.","That's arc consistency.","But now you've got two variables that are assigned without violating","constraints.","And now 3-consistency comes in and says, well, if you've managed to get","two, I guarantee you that when you pick up a third,","there's a legal extension.","So great, now I've got three assignments the don't violate a","constraint, and I can keep doing this using higher orders of consistency.","So it must be that these higher orders of consistency are impractical,","because if we had them, then we wouldn't have to backtrack.","And in fact, this is true.","Full inconsistency is just as hard as solving the CSP in the first place.","Arc consistency is pretty manageable, and there are things in between that","are useful.","The most common one is, as you might expect, k equals 3.","It's something called path consistency, because you think about","three nodes as kind of forming a path, right?","Path consistency is much more expensive than arc consistency, but it","can be very powerful.",""]}