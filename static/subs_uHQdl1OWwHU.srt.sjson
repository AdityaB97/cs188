{"start":[0,1470,5390,7640,11360,14650,16379,18530,23000,25790,27270,27680,31720,34490,38150,40380,42625,46730,47480,47650,49050,50180,51890,53990,58130,60210,61880,65700,68070,69450,71490,76045,78500,79750,82340,86656,90050,92680,94970,96270,97975,102410,106200,106770,107680,111120,112450,114900,117240,121130,125040,127270,128650,130880,131990,133950,136025,139630,141260,141910,143090,147390,149650,150830,151790,152995,156130,159210,161240,165020,167870,171430,176930,181430,183720,187850,189590,192280,194980,197630,202990,206320,209350,213130,215730,219580,221020,224430,226220,227950,229710,232320,234010,235800,239310,241330,243360,248420,251980,254870,259790,267010,273040,277990,282150,284200,288610,291590,294590,296710,299690,305200,310230,314780,319080,322940,326830,328590,332390,333685,335750,338640,342050,345530,348160,351060,354240,357680,360800,363380,364680,367340,371550,377890,381800,385800,388900,392700,393950,396920,399160,402100,403200,406940,409600,412890,413980,416930,418620,422070,424940,428660,430830,433340,434970,435960,437310,438580,442655,442790,443790,444210,449190,453250,455940,462760,467570,470470,474330,478240,481320,483420,486830,491160,494620,496280,500640,503040,503930,505760,507500,510190,513549,517250,520760,524179,525710,529220,532050,534170,536580,541140,544530,548940,551120,553800,556080],"end":[1470,5390,7640,11360,14650,16379,18530,23000,25790,27270,27680,31720,34490,38150,40380,42625,46730,47480,47650,49050,50180,51890,53990,58130,60210,61880,65700,68070,69450,71490,76045,78500,79750,82340,86656,90050,92680,94970,96270,97975,102410,106200,106770,107680,111120,112450,114900,117240,121130,125040,127270,128650,130880,131990,133950,136025,139630,141260,141910,143090,147390,149650,150830,151790,152995,156130,159210,161240,165020,167870,171430,176930,181430,183720,187850,189590,192280,194980,197630,202990,206320,209350,213130,215730,219580,221020,224430,226220,227950,229710,232320,234010,235800,239310,241330,243360,248420,251980,254870,259790,267010,273040,277990,282150,284200,288610,291590,294590,296710,299690,305200,310230,314780,319080,322940,326830,328590,332390,333685,335750,338640,342050,345530,348160,351060,354240,357680,360800,363380,364680,367340,371550,377890,381800,385800,388900,392700,393950,396920,399160,402100,403200,406940,409600,412890,413980,416930,418620,422070,424940,428660,430830,433340,434970,435960,437310,438580,442655,442790,443790,444210,449190,453250,455940,462760,467570,470470,474330,478240,481320,483420,486830,491160,494620,496280,500640,503040,503930,505760,507500,510190,513549,517250,520760,524179,525710,529220,532050,534170,536580,541140,544530,548940,551120,553800,556080,557330],"text":["","DAN KLEIN: So, we know that if we want to do well, we have to use depth","limited search in order to make this practical.","We have to plug in a good evaluation function but still, because minimax is","so good at these kinds of tactical decisions, we'd like to go as deeply","into the tree as possible.","And what we're going to do is we're going to look for ways to prune the","tree to look for branches that do not have to be analyzed.","So let's go back to the minimax example where the tree is slowly","revealed to us.","Right.","In this example, we went to the first child and we saw by examining its","children that it's minimax value is three.","So we know here that this minimax value here is three.","Now, let's think about what happened here.","This node ended up being a two.","When we saw that first child, we didn't yet know what its min","was going to be.","Right?","Its min could be two.","It could be negative 10.","It could be negative a million.","But we know it's two or lower.","Now we kept doing the computation to see that yes, indeed, it's two.","But we knew from that very first child it was already going","to be two or lower.","Over here, we didn't actually know until the end that it was","also going to be two.","So let's think about whether or not we could have","accomplished any pruning there.","Well, for the first child, you got to look at all the children to see that","this is a three.","Right?","What I mean by you have to look at all the children, is that eight could have","been a negative 10 and we don't know what to return unless we see it.","When we get to the second child, the situation's very different.","So as soon as we see this two, what are we going to return?","Well, I don't know what we're going to return, but it's going to be less than","or equal to two.","And what's the guy up top doing?","The guy up top's picking the maximum of these, which means two, one,","negative a billion, it's all equally going to be unchosen.","Right?","Two or lower?","Why are we even wasting time figuring out just exactly how cataclysmically","bad this is for MAX?","MAX is already not going to choose it.","So we can just keep going.","As long as we know that the number we returned isn't necessarily the minimax","value, it's just a value that we know is good enough to let the rest of the","computation go through.","So we get to this last child.","Let's see if we can save any work.","Well, here's a 14.","What do we know?","We know less than or equal to 14.","Well, if it's 14, MAX is going to pick it.","So we got to keep going.","Right?","What's five?","That means we scratch that out and we say less than or equal to 5.","Well MAX is still going to pick it.","So we can't stop.","Because it could be five.","It could be the best thing for MAX.","Or it could still be negative a million and MAX won't touch it.","So we have to actually look at that last child and now we see that, in","fact, it's a two.","And we can continue on at the root and return three.","So sometimes we can prune and sometimes we can't.","And the key idea is you can prune after that two--","right here, you can prune this stuff, because you know this node, which is a","candidate for MAX, you know it's already worse than another candidate.","You know it's worse then this three.","So as soon as one of these nodes that's minimizing drops below three,","we can just stop.","That's the key idea about minimax pruning, and will give us the","algorithm of alpha-beta planning.","Here's the general case for alpha-beta pruning.","Let's think about what computation we do in this minimax style search.","Well, let's think about the case where we're computing the MIN value at some","note N. So that's this node right here.","What do we do when we compute the minimum value?","Well, we loop over N's children.","As we loop over the children, what happens to this running MIN?","We saw this earlier.","That MIN start at positive infinity and it slowly ticks down as I see","smaller and smaller children.","So we've got some estimate of the MIN.","It's an estimate.","And it's dropping, dropping, dropping, dropping.","So that's what happens in MIN value.","You have an estimate and it drops.","Well, who cares about the value of this node?","Well, this node.","MAX cares about it.","So we're computing some value for N, that MAX is going to use to decide","whether or not this is going to be a choice that's going to","be the minimax choice.","So let's imagine that somewhere higher in the tree, MAX can achieve A. So","here's a place where MAX, by choosing this action here, can force a value of","A. In particular, let's let A be the best such thing.","So A is the best choice for MAX anywhere along the path to the root.","So now here we're computing N. We know the MAX can choose A","somewhere else in the tree.","As soon as N becomes worse than A, MAX will not choose it.","Now the reason MAX doesn't choose it may be that we choose another child","here, or another child here, or another child all the","way up where A was.","So we don't know exactly where N is going to be out of the running.","But we know that since MAX can force at least a value of A right here,","there is no chance that N is going to be the value the propagates up.","In essence, if N becomes worse than A because MAX will avoid it, we can stop","considering the other children and we can just cut off the search there.","There's a symmetric version to MAX where we keep track of B, which is","going to be the best choice higher in the tree for MIN and we do the","symmetric computation.","But I think the MIN version is easier to think about.","How do we build this thing?","Well it's called alpha-beta pruning.","You always keep track of two important numbers.","Alpha is the best option for MAX.","Not anywhere in the tree that we've ever seen in depth research, is the","best option on the way to the root.","So it's kind of still active on this game path.","So alpha is the best option for MAX on the way to the root.","Beta is the best option for MIN on the way to the root.","And so we still have this MAX and MIN value computation and","they look the same.","Let's look at the MAX version.","They initialize some counter.","They go through the children improving that bound, except now they have a","short circuit that says for MAX, if this thing ever gets so large that MIN","prefers beta elsewhere in the tree, just stop.","In addition to having a short circuit that compares against beta, we also","need to keep track of the fact that alpha is actually increasing as we see","these children, or at least it's increasing for things lower in the","tree when we recurse.","","So alpha-beta's a pretty cool algorithm.","Doing all of this running-- and it can be a lot of pruning, you'll see in","your projects--","it has no effect on the minimax value you compute for the root.","So you're ignoring branches all over the place.","You're cutting things off left and right, mostly right, actually.","You'll see why.","You're cutting off all of these branches and yet you still return the","same value at the root.","However, as we saw, the values of nodes other than the","root may not be correct.","Remember we returned a value that said two, maybe smaller?","We don't actually know the value in those cases.","So although the value at the root would be correct, the value of other","nodes may be wrong.","Who cares?","This is why we care.","Let's look at this little tree.","If we run minimax, we'll compute the whole tree, which is really big.","Right?","Look, three nodes.","OK.","So what we do in alpha-beta is we say, all right, here you're a 10.","When I recurse into the right child, I'm going to look at the first child","and say, OK, that's a 10.","According to the rule, we can actually end right now, return 10, cut off this","branch, and we'll be sure that the number at the root is not changed from","if we had actually done the full minimax computation, which would have","had a zero on the right but it still would have had a ten at the root.","So cutting off that zero didn't change the value of the root, but if what I","wanted was not the minimax value of the root, which is rarely what you're","after, but rather to know the optimal action.","Well, there's only one optimal action and it's to go left.","Whereas under alpha-beta, actually they look the same.","So you can't just apply this naively for action selection.","There are various ways you can modify it.","You reinforce inequality in the check you can run each child separately.","There are fancier ways to string them together, but you'll have","to be aware of this.","This is one of the complexities of your project.","It's not enough to be right at the root.","You have to be right at the children of the root because they're the ones","you're going to use to pick your action.","If you build alpha-beta pruning and you do a pretty good job of trying","that good children before the bad children, you can get much more","effective at going deeper into the tree because you're basically reducing","the branching factor.","With perfect ordering, effectively, you take the square root of the","branching factor, which means you double the depth that you're","able to search to.","Now, of course, you're still not going to go to a full depth of something","like chess, but going twice as deep is a big deal for these games.","This algorithm is also cool because it's a simple example of what's called","metareasoning or metacomputation, which is doing computation to figure","out what computation you should do.","Here we're keeping track of all these alphas and betas so that we can decide","whether or not to recurse and that's awesome.",""]}