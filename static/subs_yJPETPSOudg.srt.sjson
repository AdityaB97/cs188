{"start":[0,1670,6620,8750,12530,17490,20440,22680,25130,27750,30570,34130,36990,41650,43790,48010,49890,55830,58610,59610,63280,64769,68100,70720,74010,76880,79640,83010,85850,87980,90380,92750,95770,98650,102490,103320,104510,105600,109380,111530,113310,114740,117440,121200,124030,126520,127840,130919,132450,134580,136340,138180,141520,144590,146550,150320,153420,154420,157130,158720,161890,165610,169130,172050,175580,178980,180510,183060,184970,187090,189320,190700,192550,193750,195950,200450,204430,206900,210720,213290,214540],"end":[1670,6620,8750,12530,17490,20440,22680,25130,27750,30570,34130,36990,41650,43790,48010,49890,55830,58610,59610,63280,64769,68100,70720,74010,76880,79640,83010,85850,87980,90380,92750,95770,98650,102490,103320,104510,105600,109380,111530,113310,114740,117440,121200,124030,126520,127840,130919,132450,134580,136340,138180,141520,144590,146550,150320,153420,154420,157130,158720,161890,165610,169130,172050,175580,178980,180510,183060,184970,187090,189320,190700,192550,193750,195950,200450,204430,206900,210720,213290,214540,215400],"text":["","PROFESSOR: So far, the big ways we have accelerated our CSP solvers have","been to exploit ordering--","try good variables first, try good values first; filtering--","rule out elements of the unassigned domains based on propagation of","constraints; and now we can do something very different.","We can look at the structure of the CSP.","Sometimes you look at a CSP that you're trying to solve, and you see it","has some special graph structure.","And based on that graph structure, there'll be some technique available","to you that allows you to solve it in a particularly efficient way.","And we're going to see a couple examples of that now.","So for example, if your CSP involves this giant criminal robot network, you","might think you should go after the guy in the center.","That would be an example of exploiting structure.","Let's make that concrete.","So here is the constraint graph for the problem of map coloring Australia.","And an extreme case of problem structure is when you look at your","constraint graph--","remember, the constraint graph tells you which variables have constraints,","it doesn't tell you what those are.","We know in this particular case, they're inequality constraints, but","the constraint graph doesn't tell you that.","In this particular case, we look at it and we see that this graph is broken","into two pieces-- there's the mainland, and then there's this tiny","little CSP of a single mode for Tasmania.","That's an extreme case of structure where we have independent subproblems.","Independent subproblems are great, because you can solve them separately.","Divide and conquer.","How do we tell when we have independent subproblems?","You can tell you have independent subproblems when you look at your","constraint graph, you can do a connected component analysis of it--","for example, start at some node and do search--","and when you have multiple connected components, then they can be solved","independently.","Now, why is this so great?","So here's the good part.","The good part is that if you had n variables, but you could break it into","a bunch of subproblems with c variables each.","So n is a big number, but c is small.","You have a bunch of little problems.","Well, then the worst case solution is much better.","So in particular, you've got a bunch of problems of size c, and if the","domain size is d, then d to the c is the expense of","solving each one, right?","And how many of them do you have?","Well, you have n divided by c of them.","So it's now linear in n.","As the problem grows and grows and grows, you just get more of these","little things, and then you all get solved","independently, and that's great.","And that's a whole lot better, for example, than the original case, where","it would have been d to the n for the whole CSP.","So let's do some back of the envelope.","Let's imagine that n were 80, which is not that big for a CSP.","d is 2, so all of the domains are binary-- true/false, or","something like that.","And we can break it up into problems of size 20, so we get four","problems of size 20.","Well, if we had to solve the whole thing by enumerating all of the","possible configurations, than we'd have 2 to the 80 configurations.","If you can do 10 million a second, then that'll take four billion years,","which is probably an unacceptable run time.","If instead, you only have to solve four things, each of which is 2 to the","20th, well, now it's 0.4 seconds, which sounds a whole lot better.","So there you go.","Galactic time scales, or seconds.","That's the difference when you have independent subproblems.","So independent subproblems are great.","What's the problem with independent subproblems?","There are no independent subproblems.","You're never going to look at your constraint graph and say,","oh, isn't this nice?","I have five different subproblems that don't interact.","Typically, the problem you set out to solve is a whole connected thing, and","imposing the problem, you've kind of already separated off whatever the","separate subproblems are before you even formulate it.","So this is rare to actually see separate subproblems.","OK, so let's see if we can come up with some methods that are more","broadly applicable.",""]}