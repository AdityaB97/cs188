{"start":[0,1770,3550,8860,12770,16010,18610,22210,26040,29300,31850,33920,36530,39030,41940,43740,48300,51740,53530,56530,59240,61250,63690,65780],"end":[1770,3550,8860,12770,16010,18610,22210,26040,29300,31850,33920,36530,39030,41940,43740,48300,51740,53530,56530,59240,61250,63690,65780,67030],"text":["","DAN KLEIN: Now, there are going to be problems.","So for example, let's take a look at this case in the Australia graph.","Western Australia has been assigned red, Queensland has been assigned","green, and we've run our forward checking.","So at this point, everything looks good, right?","All unassigned variables still have legal values in their domain.","For example, in the northern territories we can still assign blue.","And in southern Australia we can still assign blue.","Now of course, what would happen if we actually assigned","blue to both of those?","Well, we'd violate a constraint.","Now, forward checking doesn't know about this, right?","This is a problem between two unassigned variables, and forward","checking doesn't deal with that.","But it might be nice if we could know that the consequences of our decision","further out in the graph somewhere have already doomed us to failure, so","we can backtrack early.","OK, so let's see if we can come up with a better approach here.","The general class of methods that reason from constraint to constraint","are called constraint propagation methods.","We're going to talk about one particular constraint propagation","method called enforcing arc consistency.",""]}