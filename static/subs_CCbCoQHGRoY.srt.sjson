{"start":[0,1500,3670,5490,8250,9390,11270,14620,17330,21490,23670,25910,29140,31480,34000,38220,41480,43200,49310,52840,54910,59320,62170,63690,67670,71360,74790,78810,81100,82280,84830,88250,90080,94460,97550,101340,104240,107150,109450,112070,114790,117790,119490],"end":[1500,3670,5490,8250,9390,11270,14620,17330,21490,23670,25910,29140,31480,34000,38220,41480,43200,49310,52840,54910,59320,62170,63690,67670,71360,74790,78810,81100,82280,84830,88250,90080,94460,97550,101340,104240,107150,109450,112070,114790,117790,119490,120740],"text":["","DAN KLEIN: Now that we have filtering in hand, we can look at another","important idea for speeding things up.","And in fact, this idea is very, very quick to implement once","you know about filtering.","And that is the idea of ordering.","So int he idea ordering, we've got choices in our backtracking search.","We've got a choice of which variable comes first.","And for a given variable, we have a choice of which value comes first.","The most important one is picking your variable.","Which variable should I choose next?","And the basic idea is we're going to choose the variable that has the","fewest legal values left in its domain.","How do we know how many values are left in its domain?","Fortunately, we're running forward checking, or arc consistency.","And so as a result, every unassigned variable has a count","associated with it.","So for example, in this Australia case, we might assign red here.","And then we might assign green here.","And the question is, what's next?","Well probably we should continue on with this heavily constrained node in","the south because it only has one value left.","It has to be blue.","It would've been a mistake to hop on over to the other side of the graph","and try to assign over here, or Tasmania, or something like that.","So the idea here is when you're confronted with a choice of variables,","and some are very, very free and some are very heavily constrained, you","should take the one that's most constrained, which the minimum","remaining values.","So the question is, why do we do the min rather than the max?","Why are we making our lives hard and going down the scary path?","You've already seen in the demo why.","But the basic idea here is you have to do every variable at some point.","You might as well do the hard ones right now at the beginning so that the","backtracking is not expensive because you're still near the top of the tree.","OK, that's the important idea for minimum remaining values.","Do the heard variables first because you're eventually going to have to do","them, and you shouldn't procrastinate.","This is also called fail-fast ordering.","Because if there's going to be a problem with these variables, you want","discover now at the top of the tree, not way at the bottom of the tree","where backtracking is exponentially worse.",""]}