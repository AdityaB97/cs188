{"start":[0,1440,3620,7180,10280,15030,16940,19450,21830,25210,27810,31480,32800,35880,38730,40510,44020,45930,48990,52440,54010,57440,61220,64620,66350,68320,70000,71210,73750,78040,81140,82860,86930,88310,92320,93980,95230,99580,102680,105230,109070,110410,113440,117490,121920,126070,131355,134880,136720,138810,140270,144770,146900,152520,153380,156140,158570,159850,161980,164620,165790,167670,169770,172520,175580,182260,186070,186400,188890,193050,194860,197350,198730,200670,201650,204430,205670,208520,210550,211960,212670,216300,216990,220330,224570,227240,228880,230980,234130,235180,237910,243520,246700,247150,248295,253200,255410,261440,263710,265590],"end":[1440,3620,7180,10280,15030,16940,19450,21830,25210,27810,31480,32800,35880,38730,40510,44020,45930,48990,52440,54010,57440,61220,64620,66350,68320,70000,71210,73750,78040,81140,82860,86930,88310,92320,93980,95230,99580,102680,105230,109070,110410,113440,117490,121920,126070,131355,134880,136720,138810,140270,144770,146900,152520,153380,156140,158570,159850,161980,164620,165790,167670,169770,172520,175580,182260,186070,186400,188890,193050,194860,197350,198730,200670,201650,204430,205670,208520,210550,211960,212670,216300,216990,220330,224570,227240,228880,230980,234130,235180,237910,243520,246700,247150,248295,253200,255410,261440,263710,265590,267200],"text":["","DAN KLEIN: Now we're going to talk about a very different class of","methods for solving CSPs called iterative improvement algorithms.","An iterative improvement algorithm, rather than building your solution up","one step by one step, we're going to start with an incorrect solution, and","try to fix it by breaking up conflicts.","","Iterative algorithms are an instance of local search.","A local search method works typically with a complete state.","For example in this case, all variables being assigned.","So here's a mini CSP where you have two nodes, and they're supposed to be","different colors.","And this is a complete state, in that all variables are assigned.","It is, however, not a goal state in the sense that the","constraints are not satisfied.","You won't ever get here with the methods that we talked about","previously.","But in order to apply an iterative algorithm, we start with an","assignment, and the assignment might look like this in that it will have","unsatisfied constraints.","So you take some assignment, it will not in general be a goal assignment.","The operators now reassign values of variables.","So for example, we might take the right variable and change","its value to blue.","And now we have a goal.","So there is no fringe, right?","This is life on the edge.","There is no fall back plan, right?","You've got one complete configuration, and you're tinkering with it one step","at a time, trying to make it better.","Here's an algorithm.","While this single state you have no fringe, right?","No backup plan.","While this single state that you have is not a goal, you","pick a variable, right?","How do you pick a variable?","You randomly select any variable which is currently conflicted.","And then you pick a new value for that variable.","And one very effective thing in practice is the min conflicts","heuristic that says you should choose a value that violates the fewest","constraints.","In other words, we're going to hill climb where the function we're","climbing is the total number of violated constraints here.","So in the case of n-queens, for example here we see four queens.","The states are going to be complete assignments where every column has a","queen, and our operators pick a column and move the queen up or down.","The goal test will be, as before, are there are no","conflicts between the queens?","And the evaluation that we're going to use is to look at","the number of attacks.","So let's actually see iterative improvement in action.","Here we have five queens.","And what I'm going to do is I'm going to run min conflicts for you.","So what does it say?","Well first, of all this is not a particularly","typical assignment, right?","And you might think, OK, that's great.","We started with everything in some reasonable position.","In fact, this is about as bad as it's going to get for this problem, to","start everything off altogether.","This is very conflicted.","OK, so what I'm going to do is I'm going to run min conflict.","So I pick some variable, which is conflicted.","And my random number generator says row two.","OK, so now what I do is I move this assignment from the first column to a","minimum column, which in this case might be here.","All right.","Now I pick another conflicted variable, and my random number","generator says row four.","I've got multiple choices, so I'll pick one.","Let's see, this one.","I pick a conflicted variable.","Does not have to be the most conflicted variable.","Maybe this one.","I move it somewhere.","And then I continue this process.","Maybe I pick this one, I move it here.","Maybe I pick this one, and I move it here.","And now I'm done.","OK.","So instead of building things up step by step, we start with a complete","assignment.","And we try to fix problems.","Let's see this in the map coloring case.","So let's now look at iterative improvement on this graph.","So what do we see right here?","We see a complete assignment.","Everything's been colored, but there's all kinds of violations of the map","coloring constraint.","So in orange, we see all the violations.","So when I click Next, what's going to happen is some conflicted variable is","going to have its value reassigned.","Right.","So it was that one.","And we do it again, and again, and again, and again.","And we keep doing this step by step.","","And now we're done.","So it can be very effective in practice.",""]}