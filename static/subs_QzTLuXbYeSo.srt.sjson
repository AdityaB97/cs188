{"start":[0,1300,4510,6770,9590,13530,17390,19930,23540,26496,27670,30280,34290,37560,40780,41100,45400,49460,52380,55540,58760,59650,63010],"end":[1300,4510,6770,9590,13530,17390,19930,23540,26496,27670,30280,34290,37560,40780,41100,45400,49460,52380,55540,58760,59650,63010,64260],"text":["","PROFESSOR: Here's a case where your graph doesn't have to be broken into","pieces, but it's still simple in some way.","And this is in a very important case that we'll see coming up over and over","again in this class, and that's the case where your constraint graph--","it's not separated into pieces, but it's not a general graph, either.","The intermediate ground that it's tree structured.","So here's a case of a constraint graph which has tree structure, which means","no loops-- no cycles in the constraint graph.","So there's a theorem--","and we'll see why this is true-- that says that if the constraint graph has","no loops, then the CSP can be solved in time that is linear in the size of","the graph, and quadratic in the size of the domains.","That's so much better than general CSPs where it's exponential.","Right.","So tree structured is much, much more efficient, and it's not crazy that you","would find something either tree structured or nearly tree structured.","This is a particular case where there's a connection between the kind","of syntactic restrictions, the structure of the problem, what we're","allowed to stay in the CSP, right-- here, the restriction is that it be","tree structured--","and the complexity of reasoning that results from that restriction.",""]}