{"start":[0,1490,5440,7250,10510,11520,14050,15145,17650,18810,19960,22540,24820,26310,29350,34840,37340,38670,39710,43290,47800,49270,51160,52630,56970,61030,64400,65530,67800,69950,74600,78490,82100,84890,87940,91080,94670,97990,100610,101430,104470,106300,108270,111270,113110,117090,118290,121660,123610,125940,127420,131570,132860,137090,140550,141430,142730,144400,146160,148470,149730,153970,154670,158080,160740,164000,165340,166440,168300,171820,173370,174000,175270,177120,180880,182370,183800,186430,187320,190900,191970,192980,194910,196570,200230,203000,208490,209520,211540,213850,215440,217200,220590,224430,225920,229200,230080,232300,232820,236620,238760,241340,243700,247940,251130,253270,254750,258640,260510,262130,262990,264120,265880,269030,271570,272860,276020,277350,280500,282080,286230,289280,292020,295590,301370,303920,305780,309050,312480,315720,317930,321110,323630,325110,328500,331860,336170,338770,342030,346130,349440,352170,354360,356440,357250,360360,363230,366290,369170,371390,375360,377780,382250,383000,385560,387730,390390,394150,397510,400300,403670,405580,408920,414260,415560,417370,418780,420600,421790,422950,426810,429200,432410,435090,438810,440870,442670,444620,445860,446640,448610,450210,453940,456960,459480,461870,464550,466680,467170,468910,471120,474750,475700,478200,479960,483100,484200,485480,487150,489840,490740,492260,497260,499770,501780,504920,506580,507960,509290,512590,514650,515320,516890,518420,521170,523790,527060,528650,529780,531140,533200,535480,538400,540280,542560,545400,548790,550930,555430,558450,561910],"end":[1490,5440,7250,10510,11520,14050,15145,17650,18810,19960,22540,24820,26310,29350,34840,37340,38670,39710,43290,47800,49270,51160,52630,56970,61030,64400,65530,67800,69950,74600,78490,82100,84890,87940,91080,94670,97990,100610,101430,104470,106300,108270,111270,113110,117090,118290,121660,123610,125940,127420,131570,132860,137090,140550,141430,142730,144400,146160,148470,149730,153970,154670,158080,160740,164000,165340,166440,168300,171820,173370,174620,175270,177120,180880,182370,183800,186430,187320,190900,191970,192980,194910,196570,200230,203000,208490,209520,211540,213850,215440,217200,220590,224430,225920,229200,230080,232300,232820,236620,238760,241340,243700,247940,251130,253270,254750,258640,260510,262130,262990,264120,265880,269030,271570,272860,274440,277350,280500,282080,286230,289280,292020,295590,301370,303920,305780,309050,312480,315720,317930,321110,323630,325110,328500,331860,336170,338770,342030,346130,349440,352170,354360,356440,357250,360360,363230,366290,369170,371390,375360,377780,382250,383000,385560,387730,390390,394150,397510,400300,403670,405580,408920,411580,415560,417370,418780,420600,421790,422950,426810,429200,432410,435090,438810,440060,442670,444620,445860,446640,448610,450210,453940,456960,459480,461870,464550,466680,467170,468910,471120,474750,475700,478200,479960,483100,484200,485480,487150,489840,490740,492260,497260,499770,501780,504920,506580,507960,509290,512590,514650,515320,516890,518420,521170,523790,527060,528650,529780,531140,533200,535480,538400,540280,542560,545400,548790,550930,555430,558450,561910,564290],"text":["","PROFESSOR: So the planning agent comes up with a better plan, but of course","it's a complex planning problem.","And in general, we're going to have to be able to formulate what we mean by a","planning problem.","Or the problems themselves, we call them search problems.","So what is a search problem?","Well, a search problem can be for something like get me","to the closest dot.","Get me to any dot.","Eat all the dots in as short a time as possible.","These are the kinds of problems we want to be able to formulate.","So what are they formally?","Well, you need a state space.","The state space is essentially in codes how the world is at a certain","point along the progression of your plan.","It is an abstraction of the world.","We'll come back to this.","So for the case of eating all of the dots, your state space might be a","position for Pac-Man, and the collection of dots which remain","encoded in some way.","So that's your state space.","You then need a successor function.","The successor function in some sense models how you think the world works.","It tells you, all right, from this state here, if I go north, I'll end up","in a state where the Pac-Man position has moved one north, and one of the","dots has been eaten.","OK, in particular, that dot has been eaten.","If I go east, I'll get some other position.","OK, the successor function takes a state in the state space, and then","what it does is it tells you where you can get to immediately, what actions","achieve that, and how much they cost in the case you have cost.","If you don't have cost, maybe all the costs are one.","So the states space models how the world is, the successor function","models how it evolves in response to your actions.","You need a start state, which is right now I'm in the lower left hand corner.","The start state model is where you begin, and you need a goal test.","The goal test looks at a state and tells you whether or not you've","achieved your goals.","So if you're trying to eat all of the dots, the goals might be something","like all dots are gone.","But maybe you don't actually care where Pac-Man is.","Or maybe you're like a type a Pac-Man, and you want to eat all the dots and","end up in the middle, right?","Well, now your goal state has to mention Pac-Man as well.","OK, that's the search problem.","State space successor function, start state and goal test.","What is a solution to such a problem?","A solution is a sequence of actions.","We can call it a plan.","A sequence of actions which transforms the start state into a state that","passes the goal test.","So it might be from the start state, your solution is north, north, east,","south, south, and so on.","All right.","Remember, this is very important.","This will come up over and over in this course.","Search problems are just models.","So you've got the real world, that's complicated.","You've got your agent.","And your agent has some kind of very rough model of the world that's used","for this problem.","And always remember that your search is only going to be good, and only","correct if your model is appropriate for the search problem.","You don't want to abstract too much, because if you abstract too much, then","you can't actually solve your problem.","We'll see examples of that.","And if you abstract too little, you end up dealing with all the","complexities of the world, and that's bad news.","Search problems are always models.","","Here's an example.","Let's say I'm traveling in Romania.","And let's say I'm at the city of Arad, and I'm trying to get to the airport","at Bucharest, OK?","I have in front of me a map.","And map is a good example of an abstraction of how the","world actually is.","The real world has actual roads with actual cars on them, some of them","happened to be closed.","There's some speed bumps.","There's birds flying overhead.","Any number of things going on in the real world.","In your abstraction, they're simply cities connected by roads with say,","mileage or times connecting them.","So here's a model, if I want to get from Arad to Bucharest, what does my","search probably need to include?","Well, it probably doesn't need to include the birds overhead.","They're probably not relevant.","But what does it need to have?","Well, there's a little bit of an art to this.","You're going to do a bunch of examples, working through on your own,","how to formulate a search problem, but let's talk through some together.","So what are the states need to be?","Minimally, my state space needs to support a goal test, and in the goal","I'm at Bucharest.","So I need to be able to look at my state, figure out whether or not I'm","at Bucharest.","So minimally, the state space needs to be a set of cities.","We'll see whether that's enough.","We need a successor function, which is what are the things I can do?","Well, my actions are to take roads.","So the successor function has, from any given city, I can go to some","adjacent city, and here there's a natural cost function, which is for","example the distance.","So from Arad I have three actions.","I have the go to Zerind action, the go to Sibiu action, and the go to the","Timisoara action.","And where's my start state?","In this case, Arad.","What's my goal test?","Is the state equal to Bucharest?","So in this case, the goal test is really just a goal state, but in many","cases it's a test.","So what does the solution look like?","Well, it some sequence of roads.","So what goes into a state space?","How did I know that it was cities and not pairs of cities and not cities","plus birds or whatever?","Well, an important distinction that we've been alluding to so far is this","notion of world state versus search or model state.","So the world state includes every last detail of the environment.","In Pac-Man, it's got where you are, where the dots are, where the power","pellets are, ghosts, walls, score, whatever you could possibly have in","the world, that's the entire world state.","In general, you don't want to plan over that because that's","a very large set.","The search state keeps only the details needed for planning.","So it's an abstraction, and the amount of abstraction your safe getting away","with depends on the problem you're solving.","So for example, if I just want a path, I'd like to get my agent from","one x,y coordinate to another, it's actually a lot","like getting to Bucharest.","Then well, you're states could just be the x,y location, right?","I can check at the goal, am I at the right location?","And these states are enough to take my actions North, South, East and West","and evolve the relevant parts of the world.","So for example, if I go East for this problem, it doesn't matter whether I","eat a dot, and so I can just change my x, y coordinate.","So in this case, the successor function updates your location only,","and so again, we can see that the state just being an x,y","pair is good enough.","The goal test is, are we at the goal position?","So that pathing.","We'll actually talk more about pathing later.","It's a very common search problem that you'll see a lot.","Let's say however, my problem is the much more difficult problem that","mastermind Pac-Man might solve, and that is the problem","of eat all the dots.","Well, now your states can't just be an x,y coordinate.","Because, for example, you can't run your goal test.","If I tell you, hey, I figured out a plan to get to 4,7, did","I eat all the dots?","You'll say, I don't know, tell me about the dots.","So if you're going to eat all the dots, probably the dots need to make","it into the formulation.","So in particular, one thing that will work for this problem is if your","states in the state space are a pair where on one hand you've got your","position, the x,y coordinate, and on the other pair you've got some","encoding of what dots are left like say, a boolean for each dot whether","it's been eaten or not.","Your actions are the same, but now the successor function updates your","location and also the set of dots.","What's your goal test now?","Your goal test is going to be something like, are","all the dots false?","What about my position?","It's not relevant to the goal.","Well, why do I even have it?","Well, you can't actually use your successor function properly and figure","out whether you've just eaten a dot unless you know where you are.","So the requirements on the state space partly come from the ability to run","the goal test, they partly come from the ability to find the correct","successor function, and you'll have a lot of practice formulating these","kinds of problems.","Lets talk quickly about state space sizes.","Why don't I just search over the world state?","Well, here it is.","So here's a grid.","It's kind of a weird grid.","There aren't dots on every position.","But on this grid, there are 120 agent positions.","OK, places where we could stick the Pac-Man.","There are 30 food dots.","There are 12 positions the ghosts could be in.","And the agent could be facing north, south, east, or west.","That matters for, say, the graphics.","OK.","So that's the full world state.","Let's think about how many of various things there are.","Well, how many world states are there?","Well lets think.","The world state has to encode the agent positions.","That's 120.","And then, it has to encode which direction the agents facing.","So that's four.","That's not super interesting.","And we've got two ghosts.","One ghost could be in any of 12 positions.","And so could the other ghost.","So, 12 squared.","And then, kind of the killer here, is the world state encode the exact","configuration of which dots are present or absent.","So what's that?","That is 2 to the 30th.","OK.","That's bad.","So this is a lot of world states.","We would rather not have any procedure which enumerates these or even","threatens that it might enumerate them.","OK?","So, lots of world states.","That's why we don't plan over world states.","However, how many states are there required for pathing?","Well, it's just the Pac-Man position.","So how many?","Just the 120.","Much, much better.","That's why we abstract.","How about the states for eat all the dots?","It had a position 120.","Doesn't care about the ghosts, doesn't care about the facing, but it does","care about the dot configuration.","So, it's actually pretty big.","Turns out, almost any search problem you could possibly care about in the","real world has some huge exponential search space.","So in general, always remember that.","The search space is so large that you will never be able to a enumerate it.","And all we're going to be talking about is algorithms that, hopefully,","find you a solution, while avoiding enumerating the entire search space.","And in general, we'd like to the enumerate as little of it as possible."]}