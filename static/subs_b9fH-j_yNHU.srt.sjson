{"start":[0,580,3780,8770,12130,15900,18270,19990,22510,23670,28170,31280,34040,35950,40650,41910,44720,46600,51150,57920,61770,62585,66500,69050,70400,72760,76940,80070,83130,84030,84980,86290,88860,91160,98120,101310,104420,107140,108870,112380,113670,115460,117020,117440,120100,123210,124950,126350,127950,129180,133910,138240,139520,142600,144330,146760,148730,151410,152310,156380,162070,166840,170070,171800,173440,175190,178120,182590,184000,186740,188860,191000,194240,196180,200640,202525,204280,207930,208900,210760,212540,216090,219635,223020,227280,232530,237350,240300,241820,242800,245070,248690,251160,252850,254620,255520,258300,261110,262180,263930,266750,267820,272650,275730,278410,279660,282610,283680,285610,286800,303000,304160,306050,309170,311610,316350,319760,322020,324180,329970,333970,335160,336910,338460,342520,344160,347170,347880,349080,349800,350560,353430,354220,357010,358080,360380],"end":[580,3780,8770,12130,15900,18270,19990,22510,23670,28170,31280,34040,35950,40650,41910,44720,46600,51150,57920,61770,62585,66500,69050,70400,72760,76940,80070,83130,84030,84980,86290,88860,91160,98120,101310,104420,107140,108870,112380,113670,115460,117020,117440,120100,123210,124950,126350,127950,129180,133910,138240,139520,142600,144330,146760,148730,151410,152310,156380,162070,166840,170070,171800,173440,175190,178120,182590,184000,186740,188860,191000,194240,196180,200640,202525,204280,207930,208900,210760,212540,216090,219635,223020,227280,232530,237350,240300,241820,242800,245070,248690,251160,252850,254620,255520,258300,261110,262180,263930,266750,267820,272650,275730,278410,279660,282610,283680,285610,286800,303000,304160,306050,309170,311610,316350,319760,322020,324180,329970,333970,335160,336910,338460,342520,344160,347170,347880,349080,349800,350560,353430,354220,357010,358080,360380,362300],"text":["","PROFESSOR: Now we have all the ideas we need to build the really killer","algorithm, the cornerstone of search in AI, which is A star search.","A star search takes all these ideas and puts them together.","Maybe some of you have heard the story of the tortoise and the hare.","Have you heard the story of the tortoise and the hare?","OK, so how's the story go?","You've got the tortoise, which is slow and steady.","It's very careful.","It eventually gets to the goal, but very, very deliberately.","You've got the hare, which zips straight along, but then at some point","goes rogue and something goes wrong.","This should remind you of something you've just seen.","Basically, this guy is Uniform Cost Search, slow and steady, but","eventually gets there.","And then you've got the hare, which is Greedy search, zips off in some","direction, maybe it's the right direction.","What we want to do, the goal of this entire endeavor is to build this.","","We want to have something that's got the properties of the turtle.","It's very slow.","It makes sure it hedges all of its bets, but it's got some vision about","where it's going and it tries to do things efficiently,","like the hare does.","So let's see how we can put these two things together.","Now, it's kind of hard to bolt the rabbit on top of the turtle, but it's","actually not so hard to bolt Uniform Cost Search and Greedy together.","So let's see what they do and how they do things wrong.","So here's a graph.","The start state is s.","The goal state is g.","The numbers h are the heuristics at each point.","And the other numbers are the action costs.","So Uniform Cost will explore ordering based on the path cost, the cumulative","path cost, which is also sometimes called the backward cost, g of n.","So for a node in the search tree, which corresponds to a path in this","graph, it has some sum of the action costs.","That's g of n for that node.","And Uniform Cost looks at all the cheap paths first, which means at the","beginning, what's it going to do?","It's going to explore out all this stuff.","Not because it's headed in the right direction.","It's not.","The heuristic is telling you to turn back.","Uniform Cost Search explores this stuff towards c, not because it's","headed in the right direction, but because it's cheap.","It does all the cheap stuff.","That's how it gets optimality.","What does Greedy do?","Well, Greedy is going to order by the proximity of the goal, which means","after it expands the path s to a, the next path it's going to for","is s to a to e.","Because even though it's really expensive, look at that eight, it","looks like it gets it close to the goal.","And Greedy has no clue about expensive paths.","It only knows about closeness to goal.","So that number h, the heuristic, is also sometimes","called the forward cost.","It's the cost of the remaining part of getting to the goal.","So it's going to explore this red area in order to find its first goal.","And so it does expensive things that look good in the future.","Even though they're actually have high cost and that can be","computed as you go.","So what does A star do?","It just adds these things together.","So in A star, you look at the sum of the backward cost.","How much this plan actually has cost you, plus the","forward cost, the heuristic.","How much you think it's going to cost going forward.","Now these two numbers, it's important, they're very different.","g sums up the action costs.","The heuristic is just for that one point because the heuristic represents","the whole rest of the way to the goal.","So if you do A star, it won't go towards c very early because the","heuristic is going to say that's expensive.","The forward cost will be high.","And it's not going to spend time on this branch that costs eight because g","will be very high.","It's going to basically go down the center.","And that's a really nice property.","OK, because of g it knows to ignore paths that are actually expensive.","And because of h it knows to ignore paths that are going to be expensive.","","All right, so, so far we've basically got an algorithm.","We're going to order what take off the fringe based on the sum of the","cumulative path cost of that node, all the actions that led to it, plus the","heuristic, which comes out of our heuristic function.","So let's execute it.","So here's a small graph.","It shouldn't be too bad.","We start with our fringe having just the empty plan starting at s.","And what's it's priority?","So we can have g here and h here.","It's its backward cost, which is zero-- right, we","haven't done anything--","plus its forward cost, which is from the heuristic, which is three.","So it's total cost is three.","We pop that.","On go it's children.","s to a, that's one successor.","s to b.","What are their Priorities s to a has backward cost two, and forward cost","two, for total cost of four.","s to b has a backward cost of two and forward cost of one, for a","total cost of three.","","What comes off first?","S to b.","What's its child?","s to b to g, which has a backward cost of five, forward cost of zero, total","cost of five.","OK, if I said I found the goal.","I just found the successor that's a goal and I returned it, I would return","the path s to b to g.","And that would be bad because it costs five and s to a to g only costs four.","So even though I found this lower path, why did I find it first?","I found it first because the heuristic made it appealing to","check into it first.","The reason why we leave things on the fringe until we dequeue them is","because s to a still holds out hope of being better than this path.","And in fact, it will be.","So I do not yet declare victory.","I pop off s to a.","I get s to a to g, which has backward cost four, forward cost","zero, total cost four.","Then, this is now the cheapest thing on the fringe.","I pop it off.","I see it passed the goal test.","And I return it.","So this is critical.","You stop when you dequeue the goal from the fringe, not","when you enqueue it.","Otherwise, you will make mistakes.","So that's lesson number one.","That goal test really matters when you execute it.",""]}
